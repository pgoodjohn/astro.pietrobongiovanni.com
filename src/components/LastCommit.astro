---
// No props needed as we're fetching data client-side
---

<div class="relative group">
    <a
        href="https://github.com/pgoodjohn"
        target="_blank"
        rel="noopener noreferrer"
        class="text-gray-500 hover:text-indigo-500 transition-colors"
        id="github-icon"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            width="24"
            height="24"
            class="fill-current"
        >
            <path
                d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
            ></path>
        </svg>
    </a>
    <div
        class="absolute left-1/2 transform -translate-x-1/2 mt-2 min-w-[200px] max-w-[300px] rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50"
    >
        <div class="py-2 px-4" id="tooltip-content">
            <div class="text-sm text-gray-700">
                If you see this, I have been slacking.
            </div>
        </div>
    </div>
</div>

<script>
    interface GitHubEvent {
        type: string;
        created_at: string;
        repo: {
            name: string;
        };
        payload: {
            commits: Array<{
                message: string;
                sha: string;
            }>;
            size?: number;
            distinct_size?: number;
            stats?: {
                additions: number;
                deletions: number;
            };
        };
    }

    function getRelativeTimeString(date: Date): string {
        const now = new Date();
        const diffInSeconds = Math.floor(
            (now.getTime() - date.getTime()) / 1000,
        );

        const intervals = {
            year: 31536000,
            month: 2592000,
            week: 604800,
            day: 86400,
            hour: 3600,
            minute: 60,
            second: 1,
        };

        for (const [unit, secondsInUnit] of Object.entries(intervals)) {
            const value = Math.floor(diffInSeconds / secondsInUnit);
            if (value >= 1) {
                return `${value} ${unit}${value === 1 ? "" : "s"} ago`;
            }
        }

        return "just now";
    }

    async function fetchLastCommit() {
        try {
            const response = await fetch(
                "https://api.github.com/users/pgoodjohn/events",
            );
            const events = (await response.json()) as GitHubEvent[];

            // Find the first push event
            const lastPushEvent = events.find(
                (event: GitHubEvent) => event.type === "PushEvent",
            );

            if (lastPushEvent && lastPushEvent.payload.commits?.length > 0) {
                const tooltipContent =
                    document.getElementById("tooltip-content");
                if (tooltipContent) {
                    const repoName = lastPushEvent.repo.name;
                    const lastCommit =
                        lastPushEvent.payload.commits[
                            lastPushEvent.payload.commits.length - 1
                        ];
                    const commitUrl = `https://github.com/${repoName}/commit/${lastCommit.sha}`;
                    const timeAgo = getRelativeTimeString(
                        new Date(lastPushEvent.created_at),
                    );

                    // Fetch commit details to get the stats
                    const commitResponse = await fetch(
                        `https://api.github.com/repos/${repoName}/commits/${lastCommit.sha}`,
                    );
                    const commitData = await commitResponse.json();
                    const additions = commitData.stats?.additions || 0;
                    const deletions = commitData.stats?.deletions || 0;

                    tooltipContent.innerHTML = `
                        <div class="flex flex-col space-y-3">
                            <div class="flex items-center justify-between">
                                <div class="text-xs font-medium text-gray-400 uppercase tracking-wider">Last Activity</div>
                                <span class="text-xs text-gray-400">${timeAgo}</span>
                            </div>
                            <div class="flex flex-col space-y-2">
                                <div class="truncate font-medium text-gray-900" title="${repoName.split("/")[1]}">${repoName.split("/")[1]}</div>
                                <div class="flex items-center justify-between">
                                    <span class="text-xs px-2 py-1 bg-indigo-50 text-indigo-500 rounded-full whitespace-nowrap">+${additions} -${deletions}</span>
                                    <a href="${commitUrl}" class="text-xs text-gray-500 hover:text-indigo-500 transition-colors whitespace-nowrap" target="_blank" rel="noopener noreferrer">View commit â†’</a>
                                </div>
                            </div>
                        </div>
                    `;
                }
            }
        } catch (error) {
            console.error("Error fetching last commit:", error);
            const tooltipContent = document.getElementById("tooltip-content");
            if (tooltipContent) {
                tooltipContent.innerHTML = `
                    <div class="text-sm text-gray-700">Unable to fetch info</div>
                `;
            }
        }
    }

    // Fetch commit info when the component mounts
    document.addEventListener("DOMContentLoaded", fetchLastCommit);
</script>
